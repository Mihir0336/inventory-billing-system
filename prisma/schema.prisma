generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role      @default(STAFF)
  companyName   String?   @default("My Company")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  bills         Bill[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String?
  sku         String      @unique
  price       Float
  cost        Float
  stock       Int
  minStock    Int         @default(10)
  category    String
  image       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  billItems   BillItem[]
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  email     String?
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bills     Bill[]
}

model Bill {
  id         String     @id @default(cuid())
  billNumber String     @unique
  customerId String?
  customer   Customer?  @relation(fields: [customerId], references: [id])
  userId     String
  user       User       @relation(fields: [userId], references: [id])
  subtotal   Float
  tax        Float
  discount   Float      @default(0)
  total      Float
  status     BillStatus @default(PENDING)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  items      BillItem[]
}

model BillItem {
  id        String  @id @default(cuid())
  billId    String
  bill      Bill    @relation(fields: [billId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  total     Float
}

enum Role {
  ADMIN
  STAFF
}

enum BillStatus {
  PENDING
  PAID
  CANCELLED
}
